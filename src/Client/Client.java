package Client;

import Crypto.Crypto;
import Message.Message;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.net.Socket;


public class Client extends javax.swing.JFrame {

    private Socket socket;
    private String sender;
    private int Key = 1;
    
    public Client() {
        initComponents();
    }
    
    public void handleButtonExit() {
        try {
            Message message = new Message();
            message.setSender(this.sender);
            message.setText("Logged Out Of Chat !!!");
            message.setAction(Message.Action.DISCONNECT);

            //Client Data Output
            ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());
            output.writeObject(message);

        } catch (IOException ex) {}
    }
    
    public void handleButtonConnect() {
        this.sender = NameInput.getText();

        try {
            //Connecting to the Chat Server
            socket = new Socket("127.0.0.1", Integer.valueOf("54321"));
            ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());

            //Sending the first message informing connection (only to pass the client's name)
            Message message = new Message();
            message.setSender(sender);
            message.setText("Join The Chat !!!");
            message.setAction(Message.Action.CONNECT);

            //Instantiating a ThreadClient to receive messages from the Server
            ThreadClient thread = new ThreadClient(sender, socket, ChatArea);
            thread.setName("Thread Client: " + sender);
            thread.start();

            //Client Data Output
            output.writeObject(message);

        } catch (IOException ex) {}
    }
    
    public void handleButtonSubmit() {
        try {
            Crypto crypto = new Crypto();
            Message message = new Message();
            message.setSender(this.sender);
            message.setText(crypto.crypt(Key, this.MsgInput.getText()));
            message.setAction(Message.Action.SEND);

            //Client Data Output
            ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());
            output.writeObject(message);

            this.MsgInput.setText("");

        } catch (IOException ex) {}
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NameInput = new javax.swing.JTextField();
        ConBTN = new javax.swing.JButton();
        DisBTN = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ChatArea = new javax.swing.JTextArea();
        MsgInput = new javax.swing.JTextField();
        SendBTN = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Client");
        setResizable(false);

        ConBTN.setText("Connect ");
        ConBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConBTNActionPerformed(evt);
            }
        });

        DisBTN.setText("Disconnect");
        DisBTN.setEnabled(false);
        DisBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisBTNActionPerformed(evt);
            }
        });

        jLabel1.setText("Name");

        ChatArea.setColumns(20);
        ChatArea.setRows(5);
        ChatArea.setEnabled(false);
        jScrollPane1.setViewportView(ChatArea);

        MsgInput.setEnabled(false);

        SendBTN.setText("Send");
        SendBTN.setEnabled(false);
        SendBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendBTNActionPerformed(evt);
            }
        });

        jLabel2.setText("Message");

        jLabel3.setText("Chat");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(NameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ConBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DisBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(MsgInput)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SendBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(NameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ConBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DisBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(MsgInput, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SendBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ConBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConBTNActionPerformed
        handleButtonConnect();
        DisBTN.setEnabled(true);
        SendBTN.setEnabled(true);
        ChatArea.setEnabled(true);
        MsgInput.setEnabled(true);
        NameInput.setEnabled(false);
        ConBTN.setEnabled(false);
        this.setTitle("Client: " + sender);
    }//GEN-LAST:event_ConBTNActionPerformed

    private void SendBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendBTNActionPerformed
        handleButtonSubmit();
    }//GEN-LAST:event_SendBTNActionPerformed

    private void DisBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisBTNActionPerformed
        handleButtonExit();
        DisBTN.setEnabled(false);
        SendBTN.setEnabled(false);
        ChatArea.setEnabled(false);
        MsgInput.setEnabled(false);
        NameInput.setText("");
        NameInput.setEnabled(true);
        ConBTN.setEnabled(true);
        this.setTitle("Client");
        
    }//GEN-LAST:event_DisBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea ChatArea;
    private javax.swing.JButton ConBTN;
    private javax.swing.JButton DisBTN;
    private javax.swing.JTextField MsgInput;
    private javax.swing.JTextField NameInput;
    private javax.swing.JButton SendBTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
